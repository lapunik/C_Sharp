//------------------------------------------------------------------------------
// <auto-generated>
//     Tento kód byl generován nástrojem.
//     Verze modulu runtime:4.0.30319.42000
//
//     Změny tohoto souboru mohou způsobit nesprávné chování a budou ztraceny,
//     dojde-li k novému generování kódu.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Tento zdrojový kód byl automaticky vytvořen Microsoft.VSDesigner, Verze 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace KlientWS_kurzovni_listek.Gama_Data {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ExchangeRatesSoap", Namespace="http://www.gama-system.com/webservices")]
    public partial class ExchangeRates : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetExchangeRatesByValueXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExchangeRatesByDateXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExchangeRatesXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentExchangeRatesXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExchangeRatesXMLSchemaOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentExchangeRateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExchangeRateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConvertToEUROperationCompleted;
        
        private System.Threading.SendOrPostCallback ConvertToForeignOperationCompleted;
        
        private System.Threading.SendOrPostCallback CurrentConvertToEUROperationCompleted;
        
        private System.Threading.SendOrPostCallback CurrentConvertToForeignOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ExchangeRates() {
            this.Url = global::KlientWS_kurzovni_listek.Properties.Settings.Default.KlientWS_kurzovni_listek_Gama_Data_ExchangeRates;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetExchangeRatesByValueXMLCompletedEventHandler GetExchangeRatesByValueXMLCompleted;
        
        /// <remarks/>
        public event GetExchangeRatesByDateXMLCompletedEventHandler GetExchangeRatesByDateXMLCompleted;
        
        /// <remarks/>
        public event GetExchangeRatesXMLCompletedEventHandler GetExchangeRatesXMLCompleted;
        
        /// <remarks/>
        public event GetCurrentExchangeRatesXMLCompletedEventHandler GetCurrentExchangeRatesXMLCompleted;
        
        /// <remarks/>
        public event GetExchangeRatesXMLSchemaCompletedEventHandler GetExchangeRatesXMLSchemaCompleted;
        
        /// <remarks/>
        public event GetCurrentExchangeRateCompletedEventHandler GetCurrentExchangeRateCompleted;
        
        /// <remarks/>
        public event GetExchangeRateCompletedEventHandler GetExchangeRateCompleted;
        
        /// <remarks/>
        public event ConvertToEURCompletedEventHandler ConvertToEURCompleted;
        
        /// <remarks/>
        public event ConvertToForeignCompletedEventHandler ConvertToForeignCompleted;
        
        /// <remarks/>
        public event CurrentConvertToEURCompletedEventHandler CurrentConvertToEURCompleted;
        
        /// <remarks/>
        public event CurrentConvertToForeignCompletedEventHandler CurrentConvertToForeignCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gama-system.com/webservices/GetExchangeRatesByValueXML", RequestNamespace="http://www.gama-system.com/webservices", ResponseNamespace="http://www.gama-system.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetExchangeRatesByValueXML(string strBank, string strCurrency, decimal dcmLow, decimal dcmHigh, int intRank) {
            object[] results = this.Invoke("GetExchangeRatesByValueXML", new object[] {
                        strBank,
                        strCurrency,
                        dcmLow,
                        dcmHigh,
                        intRank});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetExchangeRatesByValueXMLAsync(string strBank, string strCurrency, decimal dcmLow, decimal dcmHigh, int intRank) {
            this.GetExchangeRatesByValueXMLAsync(strBank, strCurrency, dcmLow, dcmHigh, intRank, null);
        }
        
        /// <remarks/>
        public void GetExchangeRatesByValueXMLAsync(string strBank, string strCurrency, decimal dcmLow, decimal dcmHigh, int intRank, object userState) {
            if ((this.GetExchangeRatesByValueXMLOperationCompleted == null)) {
                this.GetExchangeRatesByValueXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExchangeRatesByValueXMLOperationCompleted);
            }
            this.InvokeAsync("GetExchangeRatesByValueXML", new object[] {
                        strBank,
                        strCurrency,
                        dcmLow,
                        dcmHigh,
                        intRank}, this.GetExchangeRatesByValueXMLOperationCompleted, userState);
        }
        
        private void OnGetExchangeRatesByValueXMLOperationCompleted(object arg) {
            if ((this.GetExchangeRatesByValueXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExchangeRatesByValueXMLCompleted(this, new GetExchangeRatesByValueXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gama-system.com/webservices/GetExchangeRatesByDateXML", RequestNamespace="http://www.gama-system.com/webservices", ResponseNamespace="http://www.gama-system.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetExchangeRatesByDateXML(string strBank, string strCurrency, string strDateLow, string strDateHigh) {
            object[] results = this.Invoke("GetExchangeRatesByDateXML", new object[] {
                        strBank,
                        strCurrency,
                        strDateLow,
                        strDateHigh});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetExchangeRatesByDateXMLAsync(string strBank, string strCurrency, string strDateLow, string strDateHigh) {
            this.GetExchangeRatesByDateXMLAsync(strBank, strCurrency, strDateLow, strDateHigh, null);
        }
        
        /// <remarks/>
        public void GetExchangeRatesByDateXMLAsync(string strBank, string strCurrency, string strDateLow, string strDateHigh, object userState) {
            if ((this.GetExchangeRatesByDateXMLOperationCompleted == null)) {
                this.GetExchangeRatesByDateXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExchangeRatesByDateXMLOperationCompleted);
            }
            this.InvokeAsync("GetExchangeRatesByDateXML", new object[] {
                        strBank,
                        strCurrency,
                        strDateLow,
                        strDateHigh}, this.GetExchangeRatesByDateXMLOperationCompleted, userState);
        }
        
        private void OnGetExchangeRatesByDateXMLOperationCompleted(object arg) {
            if ((this.GetExchangeRatesByDateXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExchangeRatesByDateXMLCompleted(this, new GetExchangeRatesByDateXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gama-system.com/webservices/GetExchangeRatesXML", RequestNamespace="http://www.gama-system.com/webservices", ResponseNamespace="http://www.gama-system.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetExchangeRatesXML(string strBank, string strDate) {
            object[] results = this.Invoke("GetExchangeRatesXML", new object[] {
                        strBank,
                        strDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetExchangeRatesXMLAsync(string strBank, string strDate) {
            this.GetExchangeRatesXMLAsync(strBank, strDate, null);
        }
        
        /// <remarks/>
        public void GetExchangeRatesXMLAsync(string strBank, string strDate, object userState) {
            if ((this.GetExchangeRatesXMLOperationCompleted == null)) {
                this.GetExchangeRatesXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExchangeRatesXMLOperationCompleted);
            }
            this.InvokeAsync("GetExchangeRatesXML", new object[] {
                        strBank,
                        strDate}, this.GetExchangeRatesXMLOperationCompleted, userState);
        }
        
        private void OnGetExchangeRatesXMLOperationCompleted(object arg) {
            if ((this.GetExchangeRatesXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExchangeRatesXMLCompleted(this, new GetExchangeRatesXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gama-system.com/webservices/GetCurrentExchangeRatesXML", RequestNamespace="http://www.gama-system.com/webservices", ResponseNamespace="http://www.gama-system.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCurrentExchangeRatesXML(string strBank) {
            object[] results = this.Invoke("GetCurrentExchangeRatesXML", new object[] {
                        strBank});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentExchangeRatesXMLAsync(string strBank) {
            this.GetCurrentExchangeRatesXMLAsync(strBank, null);
        }
        
        /// <remarks/>
        public void GetCurrentExchangeRatesXMLAsync(string strBank, object userState) {
            if ((this.GetCurrentExchangeRatesXMLOperationCompleted == null)) {
                this.GetCurrentExchangeRatesXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentExchangeRatesXMLOperationCompleted);
            }
            this.InvokeAsync("GetCurrentExchangeRatesXML", new object[] {
                        strBank}, this.GetCurrentExchangeRatesXMLOperationCompleted, userState);
        }
        
        private void OnGetCurrentExchangeRatesXMLOperationCompleted(object arg) {
            if ((this.GetCurrentExchangeRatesXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentExchangeRatesXMLCompleted(this, new GetCurrentExchangeRatesXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gama-system.com/webservices/GetExchangeRatesXMLSchema", RequestNamespace="http://www.gama-system.com/webservices", ResponseNamespace="http://www.gama-system.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetExchangeRatesXMLSchema() {
            object[] results = this.Invoke("GetExchangeRatesXMLSchema", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetExchangeRatesXMLSchemaAsync() {
            this.GetExchangeRatesXMLSchemaAsync(null);
        }
        
        /// <remarks/>
        public void GetExchangeRatesXMLSchemaAsync(object userState) {
            if ((this.GetExchangeRatesXMLSchemaOperationCompleted == null)) {
                this.GetExchangeRatesXMLSchemaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExchangeRatesXMLSchemaOperationCompleted);
            }
            this.InvokeAsync("GetExchangeRatesXMLSchema", new object[0], this.GetExchangeRatesXMLSchemaOperationCompleted, userState);
        }
        
        private void OnGetExchangeRatesXMLSchemaOperationCompleted(object arg) {
            if ((this.GetExchangeRatesXMLSchemaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExchangeRatesXMLSchemaCompleted(this, new GetExchangeRatesXMLSchemaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gama-system.com/webservices/GetCurrentExchangeRate", RequestNamespace="http://www.gama-system.com/webservices", ResponseNamespace="http://www.gama-system.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal GetCurrentExchangeRate(string strBank, string strCurrency, int intRank) {
            object[] results = this.Invoke("GetCurrentExchangeRate", new object[] {
                        strBank,
                        strCurrency,
                        intRank});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentExchangeRateAsync(string strBank, string strCurrency, int intRank) {
            this.GetCurrentExchangeRateAsync(strBank, strCurrency, intRank, null);
        }
        
        /// <remarks/>
        public void GetCurrentExchangeRateAsync(string strBank, string strCurrency, int intRank, object userState) {
            if ((this.GetCurrentExchangeRateOperationCompleted == null)) {
                this.GetCurrentExchangeRateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentExchangeRateOperationCompleted);
            }
            this.InvokeAsync("GetCurrentExchangeRate", new object[] {
                        strBank,
                        strCurrency,
                        intRank}, this.GetCurrentExchangeRateOperationCompleted, userState);
        }
        
        private void OnGetCurrentExchangeRateOperationCompleted(object arg) {
            if ((this.GetCurrentExchangeRateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentExchangeRateCompleted(this, new GetCurrentExchangeRateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gama-system.com/webservices/GetExchangeRate", RequestNamespace="http://www.gama-system.com/webservices", ResponseNamespace="http://www.gama-system.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal GetExchangeRate(string strBank, string strCurrency, string strDate, int intRank) {
            object[] results = this.Invoke("GetExchangeRate", new object[] {
                        strBank,
                        strCurrency,
                        strDate,
                        intRank});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void GetExchangeRateAsync(string strBank, string strCurrency, string strDate, int intRank) {
            this.GetExchangeRateAsync(strBank, strCurrency, strDate, intRank, null);
        }
        
        /// <remarks/>
        public void GetExchangeRateAsync(string strBank, string strCurrency, string strDate, int intRank, object userState) {
            if ((this.GetExchangeRateOperationCompleted == null)) {
                this.GetExchangeRateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExchangeRateOperationCompleted);
            }
            this.InvokeAsync("GetExchangeRate", new object[] {
                        strBank,
                        strCurrency,
                        strDate,
                        intRank}, this.GetExchangeRateOperationCompleted, userState);
        }
        
        private void OnGetExchangeRateOperationCompleted(object arg) {
            if ((this.GetExchangeRateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExchangeRateCompleted(this, new GetExchangeRateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gama-system.com/webservices/ConvertToEUR", RequestNamespace="http://www.gama-system.com/webservices", ResponseNamespace="http://www.gama-system.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal ConvertToEUR(decimal dcmValue, string strBank, string strCurrency, string strDate, int intRank) {
            object[] results = this.Invoke("ConvertToEUR", new object[] {
                        dcmValue,
                        strBank,
                        strCurrency,
                        strDate,
                        intRank});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void ConvertToEURAsync(decimal dcmValue, string strBank, string strCurrency, string strDate, int intRank) {
            this.ConvertToEURAsync(dcmValue, strBank, strCurrency, strDate, intRank, null);
        }
        
        /// <remarks/>
        public void ConvertToEURAsync(decimal dcmValue, string strBank, string strCurrency, string strDate, int intRank, object userState) {
            if ((this.ConvertToEUROperationCompleted == null)) {
                this.ConvertToEUROperationCompleted = new System.Threading.SendOrPostCallback(this.OnConvertToEUROperationCompleted);
            }
            this.InvokeAsync("ConvertToEUR", new object[] {
                        dcmValue,
                        strBank,
                        strCurrency,
                        strDate,
                        intRank}, this.ConvertToEUROperationCompleted, userState);
        }
        
        private void OnConvertToEUROperationCompleted(object arg) {
            if ((this.ConvertToEURCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConvertToEURCompleted(this, new ConvertToEURCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gama-system.com/webservices/ConvertToForeign", RequestNamespace="http://www.gama-system.com/webservices", ResponseNamespace="http://www.gama-system.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal ConvertToForeign(decimal dcmEUR, string strBank, string strCurrency, string strDate, int intRank) {
            object[] results = this.Invoke("ConvertToForeign", new object[] {
                        dcmEUR,
                        strBank,
                        strCurrency,
                        strDate,
                        intRank});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void ConvertToForeignAsync(decimal dcmEUR, string strBank, string strCurrency, string strDate, int intRank) {
            this.ConvertToForeignAsync(dcmEUR, strBank, strCurrency, strDate, intRank, null);
        }
        
        /// <remarks/>
        public void ConvertToForeignAsync(decimal dcmEUR, string strBank, string strCurrency, string strDate, int intRank, object userState) {
            if ((this.ConvertToForeignOperationCompleted == null)) {
                this.ConvertToForeignOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConvertToForeignOperationCompleted);
            }
            this.InvokeAsync("ConvertToForeign", new object[] {
                        dcmEUR,
                        strBank,
                        strCurrency,
                        strDate,
                        intRank}, this.ConvertToForeignOperationCompleted, userState);
        }
        
        private void OnConvertToForeignOperationCompleted(object arg) {
            if ((this.ConvertToForeignCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConvertToForeignCompleted(this, new ConvertToForeignCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gama-system.com/webservices/CurrentConvertToEUR", RequestNamespace="http://www.gama-system.com/webservices", ResponseNamespace="http://www.gama-system.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal CurrentConvertToEUR(decimal dcmValue, string strBank, string strCurrency, int intRank) {
            object[] results = this.Invoke("CurrentConvertToEUR", new object[] {
                        dcmValue,
                        strBank,
                        strCurrency,
                        intRank});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void CurrentConvertToEURAsync(decimal dcmValue, string strBank, string strCurrency, int intRank) {
            this.CurrentConvertToEURAsync(dcmValue, strBank, strCurrency, intRank, null);
        }
        
        /// <remarks/>
        public void CurrentConvertToEURAsync(decimal dcmValue, string strBank, string strCurrency, int intRank, object userState) {
            if ((this.CurrentConvertToEUROperationCompleted == null)) {
                this.CurrentConvertToEUROperationCompleted = new System.Threading.SendOrPostCallback(this.OnCurrentConvertToEUROperationCompleted);
            }
            this.InvokeAsync("CurrentConvertToEUR", new object[] {
                        dcmValue,
                        strBank,
                        strCurrency,
                        intRank}, this.CurrentConvertToEUROperationCompleted, userState);
        }
        
        private void OnCurrentConvertToEUROperationCompleted(object arg) {
            if ((this.CurrentConvertToEURCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CurrentConvertToEURCompleted(this, new CurrentConvertToEURCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.gama-system.com/webservices/CurrentConvertToForeign", RequestNamespace="http://www.gama-system.com/webservices", ResponseNamespace="http://www.gama-system.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal CurrentConvertToForeign(decimal dcmEUR, string strBank, string strCurrency, int intRank) {
            object[] results = this.Invoke("CurrentConvertToForeign", new object[] {
                        dcmEUR,
                        strBank,
                        strCurrency,
                        intRank});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void CurrentConvertToForeignAsync(decimal dcmEUR, string strBank, string strCurrency, int intRank) {
            this.CurrentConvertToForeignAsync(dcmEUR, strBank, strCurrency, intRank, null);
        }
        
        /// <remarks/>
        public void CurrentConvertToForeignAsync(decimal dcmEUR, string strBank, string strCurrency, int intRank, object userState) {
            if ((this.CurrentConvertToForeignOperationCompleted == null)) {
                this.CurrentConvertToForeignOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCurrentConvertToForeignOperationCompleted);
            }
            this.InvokeAsync("CurrentConvertToForeign", new object[] {
                        dcmEUR,
                        strBank,
                        strCurrency,
                        intRank}, this.CurrentConvertToForeignOperationCompleted, userState);
        }
        
        private void OnCurrentConvertToForeignOperationCompleted(object arg) {
            if ((this.CurrentConvertToForeignCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CurrentConvertToForeignCompleted(this, new CurrentConvertToForeignCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetExchangeRatesByValueXMLCompletedEventHandler(object sender, GetExchangeRatesByValueXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExchangeRatesByValueXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExchangeRatesByValueXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetExchangeRatesByDateXMLCompletedEventHandler(object sender, GetExchangeRatesByDateXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExchangeRatesByDateXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExchangeRatesByDateXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetExchangeRatesXMLCompletedEventHandler(object sender, GetExchangeRatesXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExchangeRatesXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExchangeRatesXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetCurrentExchangeRatesXMLCompletedEventHandler(object sender, GetCurrentExchangeRatesXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentExchangeRatesXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentExchangeRatesXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetExchangeRatesXMLSchemaCompletedEventHandler(object sender, GetExchangeRatesXMLSchemaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExchangeRatesXMLSchemaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExchangeRatesXMLSchemaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetCurrentExchangeRateCompletedEventHandler(object sender, GetCurrentExchangeRateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentExchangeRateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentExchangeRateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetExchangeRateCompletedEventHandler(object sender, GetExchangeRateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExchangeRateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExchangeRateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ConvertToEURCompletedEventHandler(object sender, ConvertToEURCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConvertToEURCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConvertToEURCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ConvertToForeignCompletedEventHandler(object sender, ConvertToForeignCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConvertToForeignCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConvertToForeignCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CurrentConvertToEURCompletedEventHandler(object sender, CurrentConvertToEURCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CurrentConvertToEURCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CurrentConvertToEURCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CurrentConvertToForeignCompletedEventHandler(object sender, CurrentConvertToForeignCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CurrentConvertToForeignCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CurrentConvertToForeignCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591